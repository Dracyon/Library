@using System.Data.SqlClient
@using System.Diagnostics.Eventing.Reader
@model PagedList.IPagedList<Library.Repository.Models.Book>
@using PagedList.Mvc;
<link href="../../Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewBag.PageTitle = "Index";
}

<h2>@ViewBag.PageTitle</h2>

@if (ViewBag.IsDeleted == true)
{
    <div class="alert alert-success" role="alert">
        Book has been deleted.
    </div>
}
@if (ViewBag.IsEdid == true)
{
    <div class="alert alert-success" role="alert">
        Book has been edited.
    </div>
}
@if (ViewBag.IsError == true)
{
    <div class="alert alert-error" role="alert">
        Error has been occurred <br/> Try Again.
    </div>
}
@if (ViewBag.IsRent == true)
{
    <div class="alert alert-success" role="alert">
        Book has been rented.
    </div>
}
@if (ViewBag.IsReturn == true)
{
    <div class="alert alert-success" role="alert">
        Book has been returned.
    </div>
}


<p>
    @Html.ActionLink("Create New", "Create")
</p>
<table class="table">
    <tr>
        <th>
            @Html.ActionLink("Title", "Index", new {sortOrder = ViewBag.Title})
        </th>
        <th>
            @Html.ActionLink("Author", "Index", new {sortOrder = ViewBag.Author})
        </th>
        <th>
            @Html.ActionLink("Isbn", "Index", new {sortOrder = ViewBag.Isbn})
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Available)
        </th>
        <th>
            @Html.DisplayNameFor(model => model[0].Category.Name)
        </th>
        <th>
            @Html.ActionLink("Creation Date", "Index", new {sortOrder = ViewBag.CreationDate})
        </th>
        <th>
            @Html.ActionLink("Update Date", "Index", new {sortOrder = ViewBag.UpdateDate})
        </th>
        <th></th>
    </tr>

    @foreach (var item in Model)
    {
        <tr>
            <td>
                @Html.DisplayFor(modelItem => item.Title)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Author)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Isbn)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Available)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.Category.Name)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.CreationDate)
            </td>
            <td>
                @Html.DisplayFor(modelItem => item.UpdatenDate)
            </td>
            <td>
                @Html.ActionLink("Edit", "Edit", new {id = item.Id}, new {@class = "btn btn-primary"})
                @Html.ActionLink("Details", "Details", new {id = item.Id}, new {@class = "btn btn-success"})
                @Html.ActionLink("Delete", "Delete", new {id = item.Id}, new {@class = "btn btn-danger"})
                @if (item.Available)
                {
                    @Html.ActionLink("Rent", "RentToFriend", new {id = item.Id}, new {@class = "btn btn-info"})
                }
                else
                {
                    @Html.ActionLink("Return", "ReturnBook", new {id = item.Id}, new {@class = "btn btn-warning"})
                }
            </td>
        </tr>
    }

</table>
<div>
    <br />
    Page @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) from @Model.PageCount
    @Html.PagedListPager(Model, page => Url.Action("Index", new { page }))
</div>
